;
; File generated by cc65 v 2.19 - Git c48e821c4
;
	.fopt		compiler,"cc65 v 2.19 - Git c48e821c4"
	.setcpu		"6502"
	.smart		on
	.autoimport	on
	.case		on
	.debuginfo	on
	.importzp	sp, sreg, regsave, regbank
	.importzp	tmp1, tmp2, tmp3, tmp4, ptr1, ptr2, ptr3, ptr4
	.macpack	longbranch
	.dbg		file, "src/game_over.c", 1171, 1639109442
	.dbg		file, "src/lib/nesdoug.h", 6692, 1638737118
	.dbg		file, "src/lib/neslib.h", 8949, 1638737118
	.dbg		file, "src/lib/unrle.h", 125, 1638737118
	.dbg		file, "src/mmc3/mmc3_code.h", 2262, 1638737118
	.dbg		file, "src/irq_buffer.h", 147, 1638737118
	.dbg		file, "src/main.h", 412, 1639109374
	.dbg		file, "src/temp.h", 613, 1638737118
	.dbg		file, "src/wram.h", 104, 1638911019
	.dbg		file, "src/game_over.h", 101, 1639108891
	.dbg		file, "src/../assets/nametables.h", 78, 1639020653
	.dbg		file, "src/../assets/palettes.h", 57, 1638911019
	.dbg		file, "src/../assets/sprites.h", 103, 1639049959
	.dbg		sym, "clear_vram_buffer", "00", extern, "_clear_vram_buffer"
	.dbg		sym, "get_pad_new", "00", extern, "_get_pad_new"
	.dbg		sym, "pal_fade_to", "00", extern, "_pal_fade_to"
	.dbg		sym, "set_scroll_x", "00", extern, "_set_scroll_x"
	.dbg		sym, "set_scroll_y", "00", extern, "_set_scroll_y"
	.dbg		sym, "pal_bg", "00", extern, "_pal_bg"
	.dbg		sym, "pal_spr", "00", extern, "_pal_spr"
	.dbg		sym, "ppu_off", "00", extern, "_ppu_off"
	.dbg		sym, "ppu_on_all", "00", extern, "_ppu_on_all"
	.dbg		sym, "oam_clear", "00", extern, "_oam_clear"
	.dbg		sym, "music_stop", "00", extern, "_music_stop"
	.dbg		sym, "pad_poll", "00", extern, "_pad_poll"
	.dbg		sym, "vram_adr", "00", extern, "_vram_adr"
	.dbg		sym, "vram_unrle", "00", extern, "_vram_unrle"
	.dbg		sym, "set_chr_mode_0", "00", extern, "_set_chr_mode_0"
	.dbg		sym, "set_chr_mode_1", "00", extern, "_set_chr_mode_1"
	.dbg		sym, "set_chr_mode_2", "00", extern, "_set_chr_mode_2"
	.dbg		sym, "set_chr_mode_3", "00", extern, "_set_chr_mode_3"
	.dbg		sym, "set_chr_mode_4", "00", extern, "_set_chr_mode_4"
	.dbg		sym, "set_chr_mode_5", "00", extern, "_set_chr_mode_5"
	.dbg		sym, "is_irq_done", "00", extern, "_is_irq_done"
	.dbg		sym, "irq_array", "00", extern, "_irq_array"
	.dbg		sym, "double_buffer", "00", extern, "_double_buffer"
	.dbg		sym, "current_game_state", "00", extern, "_current_game_state"
	.dbg		sym, "go_to_title", "00", extern, "_go_to_title"
	.dbg		sym, "pad1_new", "00", extern, "_pad1_new"
	.dbg		sym, "title_nametable", "00", extern, "_title_nametable"
	.dbg		sym, "bg_palette", "00", extern, "_bg_palette"
	.dbg		sym, "sprites_palette", "00", extern, "_sprites_palette"
	.import		_clear_vram_buffer
	.import		_get_pad_new
	.import		_pal_fade_to
	.import		_set_scroll_x
	.import		_set_scroll_y
	.import		_pal_bg
	.import		_pal_spr
	.import		_ppu_off
	.import		_ppu_on_all
	.import		_oam_clear
	.import		_music_stop
	.import		_pad_poll
	.import		_vram_adr
	.import		_vram_unrle
	.import		_set_chr_mode_0
	.import		_set_chr_mode_1
	.import		_set_chr_mode_2
	.import		_set_chr_mode_3
	.import		_set_chr_mode_4
	.import		_set_chr_mode_5
	.import		_is_irq_done
	.import		_irq_array
	.import		_double_buffer
	.importzp	_current_game_state
	.import		_go_to_title
	.importzp	_pad1_new
	.export		_go_to_game_over
	.export		_game_over_handler
	.import		_title_nametable
	.import		_bg_palette
	.import		_sprites_palette

.segment	"RODATA"

.segment	"RODATA"

; ---------------------------------------------------------------
; void __near__ go_to_game_over (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_go_to_game_over: near

	.dbg	func, "go_to_game_over", "00", extern, "_go_to_game_over"

.segment	"CODE"

;
; current_game_state = GameOver;
;
	.dbg	line, "src/game_over.c", 18
	lda     #$02
	sta     _current_game_state
;
; if (irq_array[0] != 0xff) {
;
	.dbg	line, "src/game_over.c", 19
	lda     _irq_array
	cmp     #$FF
	beq     L0002
;
; while(!is_irq_done() ){}
;
	.dbg	line, "src/game_over.c", 20
L0003:	jsr     _is_irq_done
	tax
	beq     L0003
;
; irq_array[0] = 0xff;
;
	.dbg	line, "src/game_over.c", 21
	lda     #$FF
	sta     _irq_array
;
; double_buffer[0] = 0xff;
;
	.dbg	line, "src/game_over.c", 22
	sta     _double_buffer
;
; clear_vram_buffer();
;
	.dbg	line, "src/game_over.c", 25
L0002:	jsr     _clear_vram_buffer
;
; pal_fade_to(4, 0);
;
	.dbg	line, "src/game_over.c", 27
	lda     #$04
	jsr     pusha
	lda     #$00
	jsr     _pal_fade_to
;
; ppu_off(); // screen off
;
	.dbg	line, "src/game_over.c", 28
	jsr     _ppu_off
;
; vram_adr(NTADR_A(0,0));
;
	.dbg	line, "src/game_over.c", 30
	ldx     #$20
	lda     #$00
	jsr     _vram_adr
;
; vram_unrle(title_nametable);
;
	.dbg	line, "src/game_over.c", 31
	lda     #<(_title_nametable)
	ldx     #>(_title_nametable)
	jsr     _vram_unrle
;
; music_stop();
;
	.dbg	line, "src/game_over.c", 32
	jsr     _music_stop
;
; set_scroll_x(0);
;
	.dbg	line, "src/game_over.c", 34
	ldx     #$00
	txa
	jsr     _set_scroll_x
;
; set_scroll_y(0);
;
	.dbg	line, "src/game_over.c", 35
	ldx     #$00
	txa
	jsr     _set_scroll_y
;
; oam_clear();
;
	.dbg	line, "src/game_over.c", 37
	jsr     _oam_clear
;
; set_chr_mode_2(BG_MAIN_0);
;
	.dbg	line, "src/game_over.c", 39
	lda     #$00
	jsr     _set_chr_mode_2
;
; set_chr_mode_3(BG_MAIN_1);
;
	.dbg	line, "src/game_over.c", 40
	lda     #$01
	jsr     _set_chr_mode_3
;
; set_chr_mode_4(BG_MAIN_2);
;
	.dbg	line, "src/game_over.c", 41
	lda     #$02
	jsr     _set_chr_mode_4
;
; set_chr_mode_5(BG_MAIN_3);
;
	.dbg	line, "src/game_over.c", 42
	lda     #$03
	jsr     _set_chr_mode_5
;
; set_chr_mode_0(SPRITE_0);
;
	.dbg	line, "src/game_over.c", 43
	lda     #$04
	jsr     _set_chr_mode_0
;
; set_chr_mode_1(SPRITE_1);
;
	.dbg	line, "src/game_over.c", 44
	lda     #$06
	jsr     _set_chr_mode_1
;
; pal_bg(bg_palette);
;
	.dbg	line, "src/game_over.c", 46
	lda     #<(_bg_palette)
	ldx     #>(_bg_palette)
	jsr     _pal_bg
;
; pal_spr(sprites_palette);
;
	.dbg	line, "src/game_over.c", 47
	lda     #<(_sprites_palette)
	ldx     #>(_sprites_palette)
	jsr     _pal_spr
;
; ppu_on_all();
;
	.dbg	line, "src/game_over.c", 49
	jsr     _ppu_on_all
;
; pal_fade_to(0, 4);
;
	.dbg	line, "src/game_over.c", 50
	lda     #$00
	jsr     pusha
	lda     #$04
	jmp     _pal_fade_to

	.dbg	line
.endproc

; ---------------------------------------------------------------
; void __near__ game_over_handler (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_game_over_handler: near

	.dbg	func, "game_over_handler", "00", extern, "_game_over_handler"

.segment	"CODE"

;
; pad_poll(0);
;
	.dbg	line, "src/game_over.c", 54
	lda     #$00
	jsr     _pad_poll
;
; pad1_new = get_pad_new(0);
;
	.dbg	line, "src/game_over.c", 56
	lda     #$00
	jsr     _get_pad_new
	sta     _pad1_new
;
; if (pad1_new & (PAD_START | PAD_A)) {
;
	.dbg	line, "src/game_over.c", 58
	ldx     #$00
	and     #$90
	beq     L0002
;
; go_to_title();
;
	.dbg	line, "src/game_over.c", 59
	jmp     _go_to_title
;
; }
;
	.dbg	line, "src/game_over.c", 62
L0002:	rts

	.dbg	line
.endproc

